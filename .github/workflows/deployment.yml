name: CICD

on:
  pull_request:
      types: [opened, synchronize]
      branches:
        - development
      paths:
         - 'force-app/**'

jobs:
    validate-branch-name:
        runs-on: ubuntu-latest
        steps:
            - name: Validate branch name requirements
              uses: deepakputhraya/action-branch-name@master
              with:
                  regex: '([a-z])+\/([a-z])+'
                  min_length: 3
            # Update sfdx-project.json and README to use only latest package version
            - name: 'Update sfdx-project.json and README'
              id: packaging-updater
              uses: muenzpraeger/github-action-sfdx-packaging-updater@master

            # Re-add changes back to source
            - name: 'Add new package version, updated sfdx-project.json and README to source'
              if: steps.packaging-updater.outputs.isSuccess
              uses: Automattic/action-commit-to-branch@master
              with:
                  branch: ${{ github.head_ref }}
                  commit_message: 'Added new package version ID'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
            # Install Salesforce CLI
            - name: Install Salesforce CLI
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
                  mkdir sfdx-cli
                  tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
                  ./sfdx-cli/install
             # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 
            #checkout source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

            # Authenticate to org
            - name: 'Authenticate to Integration Org'
              shell: bash
              env:
                SECRETE: ${{ secrets.SECURITY_TOKEN }}
              run: sfdx auth:sfdxurl:store -f $SECRETE -s -a integration

            # We use SFDX Git Delta to create a directory with only the metadata that has changed.
            # this allows us to deploy only those changes, as opposed to deploying the entire branch. 
            # This helps reducing deployment times
            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

            # Now we can use the sfdx scanner to scan the code in the delta directory
            # The output of the scan is stored in a file called apexScanResults.sarif

            # The .sarif file can later be uploaded to github, so that we can see the 
            # results of the scan directly from the PR.

            - name: 'Scan code'
              run: |
                  cd changed-sources
                  sfdx scanner:run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif'  
                  cd ..

            
                  

           
